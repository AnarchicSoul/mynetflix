Job :
- Design Terraform architecture:
  Master
    ∟ Module kubernetes
        ∟ Deploy Nginx Ingress OSS (if true)
        ∟ Deploy cert-manager (if true)
    ∟ Module certificats
        ∟ Create secret
        ∟ Deploy certificates (with JKS)
    ∟ Module prometheus 
        ∟ Deploy prometheus (oauth2 + keycloak)
        ∟ Deploy grafana (keycloak)
        ∟ Deploy alertmanager (oauth2 + keycloak)
        ∟ Deploy Mailhog (if true + oauth2 + keycloak)
    ∟ Module keycloak (if true)
        ∟ Deploy keycloak
        ∟ Create monitor rules 
        ∟ Deploy keycloak client (if true)
    ∟ Module gravitee (if true)
        ∟ Deploy Gravitee (keycloak)
        ∟ Config publisher
        ∟ Config portal
    ∟ Module kubeshark (if true)
        ∟ Deploy kubeshark
    ∟ Module devpack (if true)
        ∟ Deploy sonarkube
        ∟ Deploy argocd (keycloak)
        ∟ Config argocd (map to k8s and gitops)
        ∟ Deploy jenkins (keycloak)
        ∟ Create pipeline
            ∟ push code to repo (docker file + helm)
            ∟ build (CI)
            ∟ Deploy netflix with argocd (CD)
    ∟ Module homer (if true)
        ∟ Deploy homer (oauth2 + keycloak)

- deploy nginx:
  --> no issues
  --> added x-forward option

- deploy cert-manager
- deploy prometheus
- deploy keycloak
  -- connect keycloak with prometheus 
- deploy jenkins
  -- connect jenkins with keycloak 
- deploy oauth2-proxy
  -- connect oauth2-proxy with keycloak
  -- protect prometheus and alertmanager UI with oauth2-proxy
- deploy argocd
- deploy myapp
  -- using jenkins 
  -- using argocd 
  -- storing in harbor
  -- scan trivy
- deploy gravitee
  -- protect myapp with gravitee and 
  -- create swagger
- deploy sonarqube
  -- scan myapp 
- deploy kubeshark
- deploy plex or netflix
- deploy homer
  -- protect with oauth2-proxy

Limitations:
Disabling prometheus and enabling keycloak is not possible or will crash (comma issue)
Only working for docker-desktop for the moment 
Impossible (or too hard) to automatize sonarqube project creation with token. Same for jenkins pipeline. Will need to follow memo
Sonaqube cannot be plug to keycloak. Will use oauth2 but it will have a doble authent... 

TODO - INIT (DEV): 
prometheus true/false
config sonarqube + jenkins
  true/false
  set password 
  set keycloak oauth2 
  image ubuntu/debian -> openssh service --> terra ansible connect ssh et manage sonar et jenkins 
déployer mongodb
déployer argocd
test API full CI/CD
  CI - sonar scan git
  CI - docker build 
  CI - docker push docker hub
  CD - argocd sync
  CD - test
Rename project (git repo)

TODO - V2 (VS): 
install gravitee > pas possible trops de CPU -> APISIX pas possible car localhost pris.  // disable docker desktop
déployer elastic + postgresql (gravitee = mongo et elastic / keycloak et sonaqube = postgrsql) // disable docker desktop
Deploy Harbor with Trivy and image scan

TODO - V3 (PROD): 
Azure ressources
full HTTPS 

Memo: 
SonarQube 
  -> Create project 
  -> Create user token 
  -> Create jenkins credentials 'secret text'
  -> Set sonarqube server in jenkins global config 
  -> Create jenkins pipeline SCM pointing to GIT 
      Note --> Jenkins File is in devpack/ 

Note for prom stack work with service monitor...
prometheus:
  prometheusSpec:
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false


Pour scanner les pods Kubernetes :

KubeScan :
KubeScan est un scanner de sécurité Kubernetes open source qui peut être utilisé pour analyser les configurations de sécurité des pods Kubernetes en cours d'exécution.
GitHub : kube-scan/kube-scan

Kube-Hunter :
Kube-Hunter est un outil de sécurité open source qui permet de détecter les vulnérabilités potentielles dans les clusters Kubernetes, y compris les pods.
GitHub : aquasecurity/kube-hunter


Pour scanner le cluster Kubernetes :

Kube-bench :
Kube-bench est un outil de benchmarking de sécurité qui évalue un cluster Kubernetes par rapport à une série de bonnes pratiques de sécurité.
GitHub : aquasecurity/kube-bench

Kube-score :
Kube-score est un outil qui évalue la configuration et les objets Kubernetes pour détecter les meilleures pratiques, les bonnes configurations et les problèmes de sécurité potentiels.
GitHub : kube-score/kube-score