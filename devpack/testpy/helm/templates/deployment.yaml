apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-app
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-app
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - name: myapp-container
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          env:
            - name: kubeusername
              value: {{ .Values.serviceAccount.name }}
          command: ["/bin/sh"]
          args:
            - -c
            - |
              cat <<EOF > /app/kubeconfig
              apiVersion: v1
              kind: Config
              clusters:
              - name: mabite
                cluster:
                  certificate-authority: /app/token/ca.crt
                  server: https://kubernetes.docker.internal:6443
              contexts:
              - name: mabite
                context:
                  cluster: mabite
                  namespace: $(cat /app/token/namespace)
                  user: $(printenv kubeusername)
              current-context: mabite
              users:
              - name: $(printenv kubeusername)
                user:
                  token: $(cat /app/token/token)
              EOF
              python app.py
          ports:
            - containerPort: 80
          volumeMounts:
            - name: kubeconfig
              mountPath: "/app/token"
      volumes:
        - name: kubeconfig
          secret:
            secretName: {{ .Values.kubeconfigSecret.name }}
